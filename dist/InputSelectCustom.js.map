{"version":3,"sources":["../lib/InputSelectCustom.js"],"names":["InputSelectCustom","props","state","value","onChangeInput","bind","setValue","nextProps","isEqual","isValuePristine","setState","prevProps","prevState","name","selectedGroup","activeValue","isArray","map","option","getValue","Component","propTypes","PropTypes","string","isRequired","any","func","defaultProps","undefined"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEMA,iB;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACXA,KADW;;AAGjB,UAAKC,KAAL,GAAa;AACXC,aAAO,MAAKF,KAAL,CAAWE;AADP,KAAb;;AAIA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,OAArB;AAPiB;AAQlB;;AAED;;;;;wCACoB;AAClB,WAAKJ,KAAL,CAAWK,QAAX,CAAoB,KAAKL,KAAL,CAAWE,KAA/B;AACD;;AAED;;;;8CAC0BI,S,EAAW;AACnC,UAAI,CAAC,qBAAEC,OAAF,CAAUD,UAAUJ,KAApB,EAA2B,KAAKF,KAAL,CAAWE,KAAtC,CAAD,IAAiDI,UAAUE,eAA/D,EAAgF;AAAE;AAChF,aAAKC,QAAL,CAAc;AACZP,iBAAOI,UAAUJ;AADL,SAAd;AAGD;AACF;;AAED;;;;uCACmBQ,S,EAAWC,S,EAAW;AAAE;AACzC,UAAI,KAAKV,KAAL,CAAWC,KAAX,KAAqBS,UAAUT,KAAnC,EAA0C;AACxC,aAAKF,KAAL,CAAWK,QAAX,CAAoB,KAAKJ,KAAL,CAAWC,KAA/B;AACA,aAAKF,KAAL,CAAWG,aAAX,CAAyB,KAAKH,KAAL,CAAWY,IAApC,EAA0C,KAAKX,KAAL,CAAWC,KAArD;AACD;AACF;;AAED;;;;kCACcW,a,EAAe;AAC3B,UAAIC,oBAAJ;AACA,UAAI,qBAAEC,OAAF,CAAUF,aAAV,CAAJ,EAA8B;AAC5BC,sBAAc,qBAAEE,GAAF,CAAMH,aAAN,EAAqB,UAACI,MAAD,EAAY;AAC7C,iBAAOA,OAAOf,KAAd;AACD,SAFa,CAAd;AAGD,OAJD,MAIO;AACLY,sBAAcD,cAAcX,KAA5B;AACD;AACD,WAAKO,QAAL,CAAc;AACZP,eAAOY;AADK,OAAd;AAGD;;;6BAEQ;AACP,aACE;AAAA;AAAA,UAAK,WAAU,MAAf;AACE,0EACM,KAAKd,KADX;AAEE,oBAAU,KAAKG,aAFjB;AAGE,iBAAO,KAAKH,KAAL,CAAWkB,QAAX;AAHT;AADF,OADF;AASD;;;;EA1D6B,gBAAMC,S;;AA6DtCpB,kBAAkBqB,SAAlB,GAA8B;AAC5BR,QAAM,gBAAMS,SAAN,CAAgBC,MAAhB,CAAuBC,UADD;AAE5BrB,SAAO,gBAAMmB,SAAN,CAAgBG,GAFK;AAG5BrB,iBAAe,gBAAMkB,SAAN,CAAgBI,IAHH;AAI5BpB,YAAU,gBAAMgB,SAAN,CAAgBI,IAAhB,CAAqBF,UAJH;AAK5BL,YAAU,gBAAMG,SAAN,CAAgBI,IAAhB,CAAqBF;AALH,CAA9B;;AAQAxB,kBAAkB2B,YAAlB,GAAiC;AAC/BxB,SAAOyB,SADwB;AAE/BxB,iBAAe,yBAAM,CAAE;AAFQ,CAAjC;;kBAKeJ,iB","file":"InputSelectCustom.js","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport _ from 'underscore';\nimport 'react-select/dist/react-select.css';\n\nclass InputSelectCustom extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n    };\n\n    this.onChangeInput = this.onChangeInput.bind(this);\n  }\n\n  // Setting the default value\n  componentDidMount() {\n    this.props.setValue(this.props.value);\n  }\n\n  // When new value is recieved forecefully update the state\n  componentWillReceiveProps(nextProps) {\n    if (!_.isEqual(nextProps.value, this.props.value) || nextProps.isValuePristine) { // eslint-disable-line\n      this.setState({\n        value: nextProps.value,\n      });\n    }\n  }\n\n  // only when there is state change, change formsy and display value to be changed\n  componentDidUpdate(prevProps, prevState) { // eslint-disable-line\n    if (this.state.value !== prevState.value) {\n      this.props.setValue(this.state.value);\n      this.props.onChangeInput(this.props.name, this.state.value);\n    }\n  }\n\n  // On typing, change the state\n  onChangeInput(selectedGroup) {\n    let activeValue;\n    if (_.isArray(selectedGroup)) {\n      activeValue = _.map(selectedGroup, (option) => {\n        return option.value;\n      });\n    } else {\n      activeValue = selectedGroup.value;\n    }\n    this.setState({\n      value: activeValue,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"divs\">\n        <Select\n          {...this.props}\n          onChange={this.onChangeInput}\n          value={this.props.getValue()}\n        />\n      </div>\n    );\n  }\n}\n\nInputSelectCustom.propTypes = {\n  name: React.PropTypes.string.isRequired,\n  value: React.PropTypes.any,\n  onChangeInput: React.PropTypes.func,\n  setValue: React.PropTypes.func.isRequired,\n  getValue: React.PropTypes.func.isRequired,\n};\n\nInputSelectCustom.defaultProps = {\n  value: undefined,\n  onChangeInput: () => {},\n};\n\nexport default InputSelectCustom;\n"]}