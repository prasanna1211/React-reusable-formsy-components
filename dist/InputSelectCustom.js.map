{"version":3,"sources":["../lib/InputSelectCustom.js"],"names":["InputSelectCustom","props","state","value","onChangeInput","bind","setValue","nextProps","isEqual","isValuePristine","setState","nextState","prevProps","prevState","name","selectedGroup","activeValue","isArray","map","option","console","log","errorMessageStyle","inline","display","wrapperClass","wrapperStyle","labelClass","label","selectClass","errorClass","getErrorMessage","Component","propTypes","PropTypes","string","isRequired","any","func","getValue","object","bool","defaultProps","undefined"],"mappings":"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","file":"InputSelectCustom.js","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport _ from 'underscore';\nimport 'react-select/dist/react-select.css';\n\nclass InputSelectCustom extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n    };\n\n    this.onChangeInput = this.onChangeInput.bind(this);\n  }\n\n  // Setting the default value\n  componentDidMount() {\n    this.props.setValue(this.props.value);\n  }\n\n  // When new value is recieved forecefully update the state\n  componentWillReceiveProps(nextProps) {\n    if (!_.isEqual(nextProps.value, this.props.value) || nextProps.isValuePristine) { // eslint-disable-line\n      this.setState({\n        value: nextProps.value,\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !_.isEqual(this.state.value, nextState.value);\n  }\n\n  // only when there is state change, change formsy and display value to be changed\n  componentDidUpdate(prevProps, prevState) { // eslint-disable-line\n    if (this.state.value !== prevState.value) {\n      this.props.setValue(this.state.value);\n      this.props.onChangeInput(this.props.name, this.state.value);\n    }\n  }\n\n  // On typing, change the state\n  onChangeInput(selectedGroup) {\n    let activeValue;\n    if (_.isArray(selectedGroup)) {\n      activeValue = _.map(selectedGroup, (option) => {\n        return option.value;\n      });\n    } else {\n      activeValue = selectedGroup.value;\n    }\n    this.setState({\n      value: activeValue,\n    });\n  }\n\n  render() {\n    console.log(' rendered input select custom ', this.state.value);\n    const errorMessageStyle = this.props.inline ? { display: 'inline-block' } : null;\n    return (\n      <div\n        className={this.props.wrapperClass}\n        style={this.props.wrapperStyle}\n      >\n        <label\n          htmlFor={this.props.name}\n          className={this.props.labelClass}\n        >\n          {this.props.label}\n        </label>\n        <Select\n          {...this.props}\n          onChange={this.onChangeInput}\n          value={this.state.value}\n          className={this.props.selectClass}\n        />\n        <div className={this.props.errorClass} style={errorMessageStyle}>\n          { this.props.getErrorMessage() }\n        </div>\n      </div>\n    );\n  }\n}\n\nInputSelectCustom.propTypes = {\n  name: React.PropTypes.string.isRequired,\n  value: React.PropTypes.any,\n  onChangeInput: React.PropTypes.func,\n  setValue: React.PropTypes.func.isRequired,\n  getValue: React.PropTypes.func.isRequired,\n  wrapperClass: React.PropTypes.string,\n  wrapperStyle: React.PropTypes.object,\n  inline: React.PropTypes.bool,\n  getErrorMessage: React.PropTypes.func.isRequired,\n  errorClass: React.PropTypes.string,\n  label: React.PropTypes.string,\n  labelClass: React.PropTypes.string,\n  selectClass: React.PropTypes.string,\n};\n\nInputSelectCustom.defaultProps = {\n  value: undefined,\n  onChangeInput: () => {},\n  selectClass: undefined,\n  wrapperClass: undefined,\n  wrapperStyle: undefined,\n  inline: undefined,\n  errorClass: undefined,\n  label: undefined,\n  labelClass: undefined,\n};\n\nexport default InputSelectCustom;\n"]}